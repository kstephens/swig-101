# swig-101

Introduction to [SWIG](http://www.swig.org/).

# HOWTO

## OSX

* Install macports
* sudo port install swig swig-ruby swig-python swig-java python3.8
* Install rbenv + ruby-build plugin
* rbenv install 2.3.0
* Install JVM 11.0.2
* Install clojure + clojure-tools

## Build

```
$ rbenv shell 2.3.0
$ gmake clean all
```

<%
require 'pp'
# pp(targets: targets)

def wrap_line line, width = 78
  words = line.split(' ')
  out = String.new
  line = String.new
  words.each do | word |
    if line.size + word.size > width
      out += line + "  \\\n  "
      line = word
    else
      line += ' ' + word
    end
  end
  out << line
end

examples = [ ]
%>

<%

%w(example1.c example2.cc).each do | example_name |
  example_src     = "src/#{example_name}"
  example         = example_name.sub(/\.([^.]+)$/, '')
  example_suffix  = $1
  examples << {
    name:     example_name,
    basename: example,
    src:      example_src,
    suffix:   example_suffix,
  }

targets = <<"END".split("\n").map{|l| l.split("|").map(&:strip).reject(&:empty?)}
C Header  | src/#{example}.h        | -
C Library | src/#{example_name}     | -
C Main    | src/#{example}-native.#{example_suffix} | target/native/#{example}
Ruby      | src/#{example}-ruby    | 
Python    | src/#{example}-python   |
TCL       | src/#{example}-tcl      |
Guile     | src/#{example}-guile    |
Clojure   | src/#{example}-clojure  | bin/run-clj src/#{example}-clojure
END
%>

# <%= example.capitalize %>

<% targets.each do | (target, file, cmd) | %>
## <%= target %>

``` <%= target.split(" ").first %>
<%= File.read(file).sub(/\n+\Z/, "\n") %>
```

<% end %>

## Output

<% targets.each do | (target, file, cmd) |
  next if cmd == '-'
  cmd ||= file
%>
### <%= target %> Output

```
$ <%= cmd %>
<%= `#{cmd}` %>
```

<% end %>

<% end %>

# Workflow

<%
example = examples.first
system 'gmake clean >/dev/null'
%>
<%=
  `gmake build-example EXAMPLE=#{example[:name]}`
  .gsub(' -I/opt/local/include ', ' ')
  .split("\n")
  .map{|l| wrap_line(l)}
  .join("\n")
%>
<% system 'gmake >/dev/null' %>
