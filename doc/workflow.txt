1. Create interface files. (once)
2. Generate bindings from interface files. (many)
3. Compile bindings.
4. Link bindings and native library into a dynamic library.
5. Load dynamic library.

************************************************************************
*
*    +---------------------------+
* +--+           foo.h           |
* |  +---------------------------+
* |  | double f(double, double); |
* |  +------------------+--------+
* |                  
* |  +---------------------------+ 
* |  |            foo.i          | 
* |  +---------------------------+ 
* |  | %module foo_swig          | 
* |  | %include "foo.h"          |
* |  +-+-------------------------+ 
* +----+  2. swig -python foo.i    \
*      v       -o bld/foo_swig.c
*    +-------------------+
* +--+  bld/foo_swig.py  |
* |  |  bld/foo_swig.c   |
* |  +-+-----------------+
* |    |  3. cc -c bld/foo_swig.c
* |    v                       
* |  +-------------------+  
* |  |  bld/foo_swig.о   |  
* |  +-+-----------------+  
* |    |  4. cc -dynamiclib         \   
* |    |       -о bld/_foo_swig.so  \   
* |    |       bld/foo_swig.о       \
* |    v       -l foo 
* |  +-------------------+ 
* |  |  bld/foo_swig.sо  | 
* |  +-+-----------------+ 
* +----+  5. python script.py
*      v
*    +--------------------------+
*    |        scripy.py         |
*    +--------------------------+
*    | import sys               |
*    | sys.path.append('bld')   |
*    | import foo_swig as foo   |
*    | print(foo.f(2.0, 3.0))   |
*    +--------------------------+
*
************************************************************************
