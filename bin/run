#!/usr/bin/env bash

export ROOT_DIR
: "${ROOT_DIR:=$(/bin/pwd)}"

bin_dirs=(
  /opt/local/libexec/gnubin
  /opt/homebrew/opt/*/libexec/gnubin
  /opt/homebrew/opt/python@3.10/bin
  /opt/homebrew/opt/python@3.10/libexec/bin # pip
  /opt/homebrew/opt/tcl-tk/bin
  /opt/homebrew/opt/openjdk/bin
  /usr/lib/jvm/java-*-openjdk-amd64/bin
  "$ROOT_DIR/local/bin"
)

PATH_OPT="$PATH"
for d in "${bin_dirs[@]}"
do
  [[ -d "$d" ]] && PATH_OPT="$d:$PATH_OPT"
done

cmd=("$@")
dir="$(/bin/pwd)"

-which() {
  PATH="$PATH_OPT" which "$@" 2>&1 | head -1
}

prog-path() { # VAR prog
  local var="$1"
  prog_name="$2" prog_exe= prog_dir= prog_home= prog_inc= prog_lib=
  shift 2
  "$@"
  : "${prog_exe:=$(-which "$prog_name" || echo "$prog_name")}"
  prog_exe="$(readlink -f "$prog_exe" 2>/dev/null || echo "$prog_exe")"
  : "${prog_dir:=$(dirname "$prog_exe")}"
  : "${prog_home:=$(cd "$prog_dir/.." && /bin/pwd)}"
  : "${prog_inc:=$prog_home/include}"
  : "${prog_lib:=$prog_home/lib}"
  # set -x
  export \
    "${var}_HOME=$prog_home" "${var}_EXE=$prog_exe" "${var}_CMD=$prog_exe" \
    "${var}_INC=$prog_inc" "${var}_LIB=$prog_lib"
  export PATH="$prog_dir:$PATH"
  # export LD_LIBRARY_PATH="$dir/target/$prog_name:$LD_LIBRARY_PATH"
  # export LD_RUN_PATH="$dir/target/$prog_name:$LD_RUN_PATH"
}

PATH="$dir/bin:$dir/local/bin:$PATH"
for swig_exe in "$SWIG_EXE" "$(which swig)" "$dir/local/bin/swig" "$dir/../swig/swig" "$HOME/local/bin/swig" CANNOT-FIND-SWIG
do
  [[ -x "$swig_exe" ]] && break
done
export SWIG_EXE="${swig_exe}"
PATH="$(dirname "${SWIG_EXE}"):$PATH"

# (set -x; env | sort; which swig); # exit

# set -x
prog-path PYTHON  python3.10
prog-path RUBY    ruby        declare prog_exe="$(rbenv which ruby)"
prog-path TCL     tclsh
prog-path GUILE   guile
prog-path JAVA    java
prog-path CLOJURE clojure

JAVA_INC="${JAVA_INC//\/jre\//\/}"
export RUBYOPT="-I$dir/target/ruby $RUBYOPT"
export RUBYLIB="$dir/src:$RUBYLIB"
export GUILE_AUTO_COMPILE=0
export PYTHONPATH="$dir/target/python:$PYTHONPATH"

case "${cmd[0]}"
in
  *.rb)
    target_dir="$dir/target/ruby"
    export LD_LIBRARY_PATH="$target_dir:$LD_LIBRARY_PATH"
  ;;
  *.py)
    target_dir="$dir/target/python"
    export LD_LIBRARY_PATH="$target_dir:$LD_LIBRARY_PATH"
  ;;
  *.clj)
    # set -x
    target_dir="$dir/target/clojure"
    export LD_LIBRARY_PATH="$target_dir:$LD_LIBRARY_PATH"
    export LD_RUN_PATH="$target_dir:$LD_RUN_PATH"
    export CLASSPATH="$target_dir:$(clojure -Spath 2>/dev/null):$CLASSPATH"
    for java in "$target_dir"/*.java
    do
      class="${java%.java}.class"
      [[ "$java" -nt "$class" ]] && javac "$java" 2>/dev/null
    done
    cmd=(clojure -Scp "${CLASSPATH}" -J-Djava.library.path="$target_dir" "${cmd[@]}")
  ;;
esac

exec "${cmd[@]}"
